AWSTemplateFormatVersion: 2010-09-09
Description: Lambda function testing.
Parameters:
  LambdaName:
    Description: The name must contain only (A-Z, a-z) or number (0-9).
    Type: String
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumberic characters
Resources:
  TestCustomResource:
    Type: Custom::TestCustomResource
    Properties:
      ServiceToken: !GetAtt LambdaFunction.Arn
      StackName: !Ref AWS::StackName
  LambdaExecRole:
    Type: AWS::IAM::Role
    Properties:
       AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
             - Effect: Allow
               Principal:
                  Service:
                  - lambda.amazonaws.com
               Action:
                  - sts:AssumeRole
       ManagedPolicyArns:
         - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  LambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      FunctionName: !Ref LambdaName
      Runtime: python3.8
      Role: !GetAtt
        - LambdaExecRole
        - Arn
      Handler: index.lambda_handler
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import logging

          logging.basicConfig(level=logging.DEBUG)
          log = logging.getLogger(__name__)

          def lambda_handler(event, context):
              def get_parameters(item):
                  client = boto3.client('ssm')
                  response_value = client.get_parameter(
                      Name=item,
                      WithDecryption=True|False
                  )
                  return response_value

              try:
                  name = get_parameters('Name')['Parameter'].get('Value', None)
                  user_name = get_parameters('Value')['Parameter'].get('Value', None)

                  with open("testfile.txt", "w") as out:
                      out.write(name + '\n')
                      out.write(user_name + '\n')

                  # Method 2: Client.put_object()
                  client = boto3.client('s3')
                  responseData = client.put_object(Body="testfile.txt", Bucket='nehagundkal-testbkt', Key='file-to-s3.txt')
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
              except:
                  cfnresponse.send(event, context, cfnresponse.FAILED, "FAILED Event")
                  log.exception("Lambda execution has failed!")
      Description: Test Lambda Function.
      TracingConfig:
        Mode: Active
  CloudWatchLogGroup:
    Type: 'AWS::Logs::LogGroup'
    Properties:
      LogGroupName:
        Fn::Join:
            - ""
            - - "/aws/lambda/"
              - Ref: LambdaName
      RetentionInDays: '7'
